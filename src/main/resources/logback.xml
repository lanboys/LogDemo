<?xml version="1.0" encoding="UTF-8"?>
<Configuration debug="true">

    <contextName>lanbing</contextName>

    <!-- tomcat下 写相对路径 logs 会出现在 bin/logs 下面 -->
    <property name="LOG_HOME" value="logs"/>
    <property name="LOG_NAME" value="test"/>

    <property name="LOG_PATTERN"
              value="[logback1] %d{yyyy-MM-dd HH:mm:ss.SSS}, %msg%n"/>
    <property name="NORMAL_PATTERN"
              value="[logback2] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level - %logger{100} - %msg%n"/>
    <property name="SERIOUS_PATTERN"
              value="[logback3] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level - %-60.60class [%4line] - %msg%n"/>

    <Appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <Layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${LOG_PATTERN}</Pattern>
        </Layout>
    </Appender>

    <appender name="FILE_ALL" class="ch.qos.logback.core.FileAppender">
        <file>${LOG_HOME}/${LOG_NAME}.all.log</file>
        <append>true</append>
        <encoder>
            <pattern>${NORMAL_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="FILE_ERROR" class="ch.qos.logback.core.FileAppender">
        <file>${LOG_HOME}/${LOG_NAME}.error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!-- 匹配上面级别时走onMatch策略(ACCEPT/DENY) -->
            <!-- 不匹配时走onMismatch策略(ACCEPT/DENY) -->
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
            <!--<onMatch>DENY</onMatch>-->
            <!--<onMismatch>DENY</onMismatch>-->
        </filter>
        <encoder>
            <pattern>${NORMAL_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${LOG_NAME}.rolling-file.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${LOG_NAME}.rolling-file.%d{yyyy-MM-dd-HH-mm}.%i.log
            </fileNamePattern>
            <!-- 单位是基于 fileNamePattern 来设定的, 比如现在是按 mm 来滚动日志, 则单位是 分钟
             比如：当前时间是：第12分钟，将保留第11/10分钟日志, 清除第9分钟的日志，但是不会清除第8分及之前的日志(手动更改时间做实验) -->
            <!-- 清除定时任务在每次分割文件的时候发生 -->
            <MaxHistory>2</MaxHistory>
            <!-- 如果不加 [.%i.], 只会生成第一次切割文件, 第二次切割文件重命名不了 -->
            <!--Renaming file [logs\test.rolling-file.log] to [logs\test.rolling-file.2019-06-23-11-00.log]-->
            <!--Failed to rename file [logs\test.rolling-file.log] as [logs\test.rolling-file.2019-06-23-11-00.log].-->
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>2kB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${NORMAL_PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="ROLLING_GZ" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${LOG_NAME}.rolling-gz.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${LOG_NAME}.rolling-gz.%d{yyyy-MM-dd-HH-mm}.%i.log.gz
            </fileNamePattern>
            <MaxHistory>2</MaxHistory>
            <!-- 如果不加 [.%i.], 只会生成第一次压缩文件, 第二次压缩文件重命名不了, 所以会剩下自动切割的缓存 tmp 文件 -->
            <!--Renaming file [logs\test.rolling-gz.log] to [logs\test.rolling-gz.log2304966301044948.tmp]-->
            <!--GZ compressing [logs\test.rolling-gz.log2304966301044948.tmp] as [logs\test.rolling-gz.2019-06-23-11-00.0.log.gz]-->
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>2kB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${NORMAL_PATTERN}</pattern>
        </encoder>
    </appender>

    <logger name="com.bing.lan.log.slf4j.cons.ConsoleLog">
        <Appender-ref ref="STDOUT"/>
    </logger>
    <!-- additivity=false 表示子类的appender到此处就不再向父类传递下去了,
    默认情况是一条日志会在全部appender(子类到root)都会打印 -->
    <logger name="com.bing.lan.log.slf4j.cons" additivity="false">
        <Appender-ref ref="FILE_ALL"/>
    </logger>
    <logger name="com.bing.lan.log.slf4j.FileLog" level="DEBUG">
        <Appender-ref ref="FILE_ALL"/>
    </logger>

    <ROOT level="INFO">
        <!--<Appender-ref ref="STDOUT"/>-->
        <!--<Appender-ref ref="FILE_ALL"/>-->
        <Appender-ref ref="FILE_ERROR"/>
        <Appender-ref ref="ROLLING_FILE"/>
        <Appender-ref ref="ROLLING_GZ"/>
    </ROOT>


</Configuration>